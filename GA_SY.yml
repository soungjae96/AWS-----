Parameters:
  KeyName:
    Description: Name of an existing EC2 keyPair to enable SSH access to the instance
    Type: AWS::EC2::KeyPair::KeyName
    ConstraintDescription: must be the name of an existing EC2 KeyPair.
    
Resources:
  VPC:
    Type: AWS::EC2::VPC
    Properties:
      EnableDnsSupport: true
      EnableDnsHostnames: true
      CidrBlock: 10.0.0.0/16
      Tags:
        - Key: Name
          Value: Sydney-VPC

  IGW:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: Sydney-IGW

  IGWAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      InternetGatewayId: !Ref IGW
      VpcId: !Ref VPC

  PublicRT:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: Seoul-public-RT

  PublicRoute:
    Type: AWS::EC2::Route
    DependsOn: IGWAttachment
    Properties:
      RouteTableId: !Ref PublicRT
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref IGW
      
  PublicSN:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      AvailabilityZone: !Select [0, !GetAZs '']
      CidrBlock: 10.0.0.0/24
      Tags:
        - Key: Name
          Value: Sydney-Public-SN-1
  
  PublicSN2:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      AvailabilityZone: !Select [2, !GetAZs '']
      CidrBlock: 10.0.1.0/24
      Tags:
        - Key: Name
          Value: Sydney-Public-SN-2

  PublicSNRouteTableAssociation1:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PublicRT
      SubnetId: !Ref PublicSN

  PublicSNRouteTableAssociation2:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PublicRT
      SubnetId: !Ref PublicSN2

  ALBTG:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      Name: ALB-TG
      Port: 80
      Protocol: HTTP 
      # ALB를 만들때 HealthCheck 항목을 넣지 않으면 
      # 설정한 기본트래픽 설정으로 체크함
      VpcId: !Ref VPC
      Targets:
        - Id: !Ref PublicEC21
          Port: 80
        - Id: !Ref PublicEC22
          Port: 80

  ALB:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    DependsOn: IGWAttachment
    Properties:
      Name: Sydney-ALB
      Scheme: internet-facing
      Subnets:
        - !Ref PublicSN
        - !Ref PublicSN2
      SecurityGroups:
        - !Ref SydneySG

  ALBListener:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      DefaultActions:
        - Type: forward
          TargetGroupArn: !Ref ALBTG
      LoadBalancerArn: !Ref ALB
      Port: 80
      Protocol: HTTP

  SydneySG:
    Type: AWS::EC2::SecurityGroup
    Properties:
      VpcId: !Ref VPC
      GroupDescription: Enable HTTP access via port 80 and SSH access via port 22
      SecurityGroupIngress:
      - IpProtocol: tcp
        FromPort: 80
        ToPort: 80
        CidrIp: 0.0.0.0/0
      - IpProtocol: tcp
        FromPort: 443
        ToPort: 443
        CidrIp: 0.0.0.0/0
      - IpProtocol: tcp
        FromPort: 22
        ToPort: 22
        CidrIp: 0.0.0.0/0
      - IpProtocol: icmp
        FromPort: '-1'
        ToPort: '-1'
        CidrIp: 0.0.0.0/0

  PublicEC21:
    Type: AWS::EC2::Instance
    Properties:
      ImageId: ami-06bbf0bc3c7055d18
      InstanceType: t2.micro
      KeyName: !Ref KeyName
      Tags:
        - Key: Name
          Value: Sydney-EC21
      NetworkInterfaces:
        - DeviceIndex: 0
          SubnetId: !Ref PublicSN
          GroupSet:
            - !Ref SydneySG
          AssociatePublicIpAddress: true
      UserData:
        Fn::Base64:
          !Sub |
            #!/bin/bash
            hostname Sy-EC2-01
            wget https://cloudneta.github.io/test.jpg
            wget -P /usr/share/nginx/html/ https://cloudneta.github.io/test.jpg
            amazon-linux-extras install -y nginx1.12
            echo "<head><link rel='icon' href='data:;base64,iVBORw0KGgo='></head><h1>CloudNet@ CloudFront Test 1 !!</h1><img src='test.jpg'>" > /usr/share/nginx/html/index.html
            systemctl start nginx
            systemctl enable nginx

  PublicEC22:
    Type: AWS::EC2::Instance
    Properties:
      ImageId: ami-06bbf0bc3c7055d18
      InstanceType: t2.micro
      KeyName: !Ref KeyName
      Tags:
        - Key: Name
          Value: Sydney-EC22
      NetworkInterfaces:
        - DeviceIndex: 0
          SubnetId: !Ref PublicSN2
          GroupSet:
            - !Ref SydneySG
          AssociatePublicIpAddress: true
      UserData:
        Fn::Base64:
          !Sub |
            #!/bin/bash
            hostname Sy-EC2-02
            wget https://cloudneta.github.io/test.jpg
            wget -P /usr/share/nginx/html/ https://cloudneta.github.io/test.jpg
            amazon-linux-extras install -y nginx1.12
            echo "<head><link rel='icon' href='data:;base64,iVBORw0KGgo='></head><h1>CloudNet@ CloudFront Test 2 !!</h1><img src='test.jpg'>" > /usr/share/nginx/html/index.html
            systemctl start nginx
            systemctl enable nginx