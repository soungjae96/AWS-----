##################################################################
# DNS 서버 바인드 설치 및 Zone 세팅
      UserData:
        Fn::Base64: |
          #!/bin/bash
          hostnamectl --static set-hostname DNSSRV
          amazon-linux-extras install epel -y
          yum -y install bind bind-utils bind-libs
          sed -i "s/listen-on port 53 { 127.0.0.1; }/listen-on port 53 { any; }/g" /etc/named.conf
          sed -i "s/allow-query     { localhost; }/allow-query     { any; }/g" /etc/named.conf
          sed -i "s/dnssec-enable yes/dnssec-enable no/g" /etc/named.conf		  
          sed -i "s/dnssec-validation yes/dnssec-validation no/g" /etc/named.conf
          cat <<EOF>> /etc/named.rfc1912.zones	
          zone "idc.internal" {
              type master;
              file "/var/named/db.idc.internal";
              allow-update { none; };
          };		  
          zone "awsneta.internal" {
              type forward;
              forward only;
              forwarders { 10.70.1.250; 10.70.2.250; };
          };
          EOF
          cat <<EOF> /var/named/db.idc.internal
          \$TTL 300
          @ IN SOA idc.internal. root.idc.internal. (
            2019122114 ; serial
            3600       ; refresh
            900        ; retry
            604800     ; expire
            86400      ; minimum
          )
          @        IN NS ns1.idc.internal.
          ns1      IN A  10.80.1.200
          websrv   IN A  10.80.1.100
          dnssrv   IN A  10.80.1.200
          
          EOF
          systemctl enable --now named
##################################################################
# Site to Site VPN 유저 데이터 ( CGW )
      UserData:
        Fn::Base64: |
          #!/bin/bash
          hostnamectl --static set-hostname IDC-CGW
          yum -y install tcpdump openswan
          cat <<EOF>> /etc/sysctl.conf
          net.ipv4.ip_forward=1
          net.ipv4.conf.all.accept_redirects = 0
          net.ipv4.conf.all.send_redirects = 0
          net.ipv4.conf.default.send_redirects = 0
          net.ipv4.conf.eth0.send_redirects = 0
          net.ipv4.conf.default.accept_redirects = 0
          net.ipv4.conf.eth0.accept_redirects = 0
          net.ipv4.conf.ip_vti0.rp_filter = 0
          net.ipv4.conf.eth0.rp_filter = 0
          net.ipv4.conf.default.rp_filter = 0
          net.ipv4.conf.all.rp_filter = 0
          EOF
          sysctl -p /etc/sysctl.conf
          curl -o /etc/ipsec.d/vpnconfig.sh https://cloudneta-book.s3.ap-northeast-2.amazonaws.com/chapter8/8_lab_vpnconfig_seoul.sh
          chmod +x /etc/ipsec.d/vpnconfig.sh
##################################################################
# HTTP 기본 웹 브라우저 설치
      UserData:
        Fn::Base64:
          !Sub |
            #!/bin/bash
            amazon-linux-extras install epel -y
            yum install httpd -y
            systemctl enable --now httpd
            echo "<h1>Test Web Server</h1>" > /var/www/html/index.html
##################################################################
# 웹 프록시 설정 및 allping 테스트 파일
# IP 가 적혀있는 부분에 테스트 할 IP 기입
      UserData:
        Fn::Base64: |
          #!/bin/bash
          hostnamectl --static set-hostname VPC0Instance1
          amazon-linux-extras install epel -y
          yum install -y tcpdump squid
          cat <<EOT > /etc/squid/squid.conf
          http_port 3128
          acl all src 0.0.0.0/0
          http_access allow all
          http_access deny all
          EOT
          systemctl start squid && systemctl enable squid
          cat <<EOT > /home/ec2-user/list.txt
          10.0.1.10
          10.10.1.10
          10.10.2.10
          10.20.1.10
          10.20.2.10
          EOT
          yum install httpd -y
          systemctl start httpd && systemctl enable httpd
          echo "<h1>TGW Lab - MgMt Server1</h1>" > /var/www/html/index.html
          curl -o /home/ec2-user/pingall.sh https://cloudneta-book.s3.ap-northeast-2.amazonaws.com/chapter6/pingall.sh --silent
          cp /home/ec2-user/pingall.sh /var/www/html/pingall.sh
          cp /home/ec2-user/list.txt /var/www/html/list.txt
          chmod +x /home/ec2-user/pingall.sh
          cat <<EOT>> /etc/bashrc
          export http_proxy=http://10.0.1.10:3128
          export https_proxy=http://10.0.1.10:3128
          
          no_proxy=127.0.0.1,localhost,169.254.169.254,10.0.0.0/8,.internal
          EOT

##################################################################
      UserData:
        Fn::Base64: |
          #!/bin/bash
          yum install -y mariadb-server mariadb lynx
          systemctl start mariadb && systemctl enable mariadb
          echo -e "\n\nqwe123\nqwe123\ny\ny\ny\ny\n" | /usr/bin/mysql_secure_installation
          mysql -uroot -pqwe123 -e "CREATE DATABASE sample; GRANT ALL PRIVILEGES ON *.* TO 'gasida'@'%' IDENTIFIED BY 'qwe123'; GRANT REPLICATION SLAVE ON *.* TO 'repl_user'@'%' IDENTIFIED BY 'qwe123'; flush privileges;"
          mysql -uroot -pqwe123 -e "USE sample;CREATE TABLE EMPLOYEES (ID int(11) UNSIGNED AUTO_INCREMENT PRIMARY KEY,NAME VARCHAR(45),ADDRESS VARCHAR(90));"
          cat <<EOT> /etc/my.cnf
          [mysqld]
          datadir=/var/lib/mysql
          socket=/var/lib/mysql/mysql.sock
          symbolic-links=0        
          #아래부분만 추가할것         
          log-bin=mysql-bin
          server-id=1
          [mysqld_safe]
          log-error=/var/log/mariadb/mariadb.log
          pid-file=/var/run/mariadb/mariadb.pid
          !includedir /etc/my.cnf.d
          EOT
          systemctl restart mariadb